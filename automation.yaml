#- alias: 'Play music for dinner'
#  trigger:
#    plaform: state
#    entity_id: scene.dinner
#    to_state: on
#  action:
#    service: media_player.play_media
#    data:
#      media_content_type: 'playlist'
#      media_content_id: 'spotify:user:spotify:playlist:37i9dQZF1DWSkkUxEhrBdF'

- alias: Fluxer switch on by default
  initial_state: 'on'
  trigger: 
    platform: homeassistant
    event: start
  action:
    service: homeassistant.turn_on
    entity_id: switch.fluxer

- alias: Lights on in the evening if home
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunset
      offset: '-02:00:00'
    - platform: state
      entity_id: group.all_devices
      state: 'home'
  condition:
    - condition: state
      entity_id: group.all_devices
      state: 'home'
    - condition: time
      after: '16:00:00'
      before: '23:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.evening

- alias: Turn off lights when everone is away
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: group.all_devices
      state: 'not_home'
  action:
    - service: light.turn_off
      entity_id: group.all_lights

- alias: Lead lights when arriving late
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.all_devices
    from: 'not_home'
    to: 'home'
    for:
      minutes: 10
  condition:
    - condition: time
      after: '23:00:00'
      before: '06:00:00'
  action:
    service: homeassistant.turn_on
    entity_id: light.dining_room_lamp

## Telegram test ##

- alias: 'Telegram bot reply with help'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/help'
  action:
    - service: notify.telegram
      data:
        message: >-
          Kajsa is {{ states("device_tracker.kajsasiphone") }} and Johnny is {{ states("device_tracker.johnnysiphone") }} 
 
- alias: 'Telegram bot that replies pong to ping'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
    - service: notify.johnny
      data_template:
        message: 'pong {{ trigger.event.args }} plong'

# - alias: 'Telegram bot scene managmement'
#   hide_entity: true
#   trigger:
#     platform: event
#     event_type: telegram_command
#     event_data:
#       command: '/scene'
#   action:
#     service: scene.turn_on
#     entity_id: scene.{{ trigger.event.telegram_command.event_data.args }}

- alias: 'Telegram bot reply with who is home'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/home'
  action:
    - service: notify.johnny
      data: 
        message: >-
          Kajsa is {{ states("device_tracker.kajsasiphone") }} and Johnny is {{ states("device_tracker.johnnysiphone") }} 
 
- alias: 'Telegram bot play Spotify playlist'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/spotify'
  action:
    service: media_player.play_media
    data:
      media_content_type: 'playlist'
      media_content_id: 'spotify:user:spotify:playlist:37i9dQZF1DWSkkUxEhrBdF'
